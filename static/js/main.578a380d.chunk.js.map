{"version":3,"sources":["symbol_OK.svg","App.js","reportWebVitals.js","index.js"],"names":["App","decrementer","key","a","list","state","updatedList","splice","setState","Number","newlistforAPI","axios","delete","then","res","filter","item","id","strike","get","c1","data","c","put","color","response","b","getDatafromAPI","array","map","obj","input","push","newItem","TrialArray","handleChange","bind","handleSubmit","event","this","target","value","e","undefined","Math","random","novinput","post","componentDidMount","preventDefault","className","style","fontSize","type","onChange","onKeyPress","onClick","backgroundColor","src","Logo","alt","height","val","key1","prop1","prop2","method","method2","React","Component","Task","props","className1","display","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.578a380d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/symbol_OK.572faa1d.svg\";","import './App.css';\nimport React from 'react';\nimport Logo from \"./symbol_OK.svg\";\nimport axios from 'axios';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n input:\"\",\n list:[],\n newlistforAPI:[], //taa e lista za GET request od mockAPI\n newItem:\"\",\n TrialArray:[\"apple\",\"banana\",\"orange\"],\n c:false //pomosna promenlva za da se setira obratno od segasno vo PUT method AXIOS\n    }\n    this.handleChange=this.handleChange.bind(this)\n    this.handleSubmit=this.handleSubmit.bind(this)\n    this.decrementer=this.decrementer.bind(this)\n    this.getDatafromAPI=this.getDatafromAPI.bind(this)\n  }\n  handleChange(event) {\n    this.setState({input: event.target.value})\n    }\n  handleSubmit(e){     \n      if(e.key === 'Enter' || e.key===undefined){\n      const newItem={\n        id:1+Math.random(),\n        value:this.state.input,\n        color:false\n      }\n      const list=[...this.state.list]\n      list.push(newItem)\n        this.setState({\n        list,\n        input:''\n      })\n      //Sakaam da napravam POST request so Axios\n      const novinput=this.state.input\n      axios.post(`https://60b6922c17d1dc0017b8811c.mockapi.io/api/v1/tasks/`, {novinput})\n      .then(res => {\n       /* console.log(res.data);*/})\n      .then(() => { // when put is finished, the fire get\n        return this.componentDidMount()})\n      // Do tuka e POST requesto\n      e.preventDefault();\n    }  }\n    decrementer=async(key)=>{\n    const list=this.state.list;\n    const updatedList=list;\n    updatedList.splice(key,1)\n      this.setState({list:updatedList}) \n      //API REQUEST\n      let a = Number(this.state.newlistforAPI[key][\"id\"])\n       await axios.delete(`https://60b6922c17d1dc0017b8811c.mockapi.io/api/v1/tasks/${a}`)\n      .then(res => {\n      const newlistforAPI=this.state.newlistforAPI.filter((item=> Number(item.id)!==a ))\n      this.setState({newlistforAPI})\n      })}\n    strike=async(key)=>{    \n     let a = Number(this.state.newlistforAPI[key][\"id\"])\n      await axios.get(`https://60b6922c17d1dc0017b8811c.mockapi.io/api/v1/tasks/${a}`)\n     .then(res =>{\n      let c1=res.data[\"color\"]\n      this.setState({c:c1})})\n     axios.put(`https://60b6922c17d1dc0017b8811c.mockapi.io/api/v1/tasks/${a}`,\n     {color:!this.state.c })\n     .then(response=>{     \n      let b=[...this.state.newlistforAPI]\n      b[key][\"color\"]=!this.state.c\n      this.setState({newlistforAPI:b})  })\n      this.getDatafromAPI(); }\n      componentDidMount(){\n        this.getDatafromAPI();} // This is how we make GET request with Axios \n    getDatafromAPI= async()=>{\n      let array=[];\n      await axios.get('https://60b6922c17d1dc0017b8811c.mockapi.io/api/v1/tasks/')\n      .then(response => {\n         response.data.map(obj=>{  \n          let a ={\n            input:obj[\"novinput\"],\n            id:obj[\"id\"],\n            color:obj[\"color\"]\n          }\n          array.push(a)\n          this.setState({\n            newlistforAPI:array\n          }) } )})\n    }\n    \n  render (){\n    //const {list}= this.state\n    const {newlistforAPI}=this.state   \n    return(\n      <div className=\"main-comp\"> \n       <div className=\"inputbutton\" style={{fontSize:\"12px\"}}>\n       My To-do-tasks:        \n          <input className=\"inputklasa\" type=\"text\" value={this.state.input} onChange={this.handleChange} onKeyPress={this.handleSubmit}/>\n          <button onClick={this.handleSubmit} style={{backgroundColor:\"red\"}} > <img src={Logo} alt=\"\" style={{height:\"1em\"}}/></button>  \n          </div>           \n{newlistforAPI? newlistforAPI.map((val,key1,key)=>(\n  <Task prop1={val.input} key={val.id} prop2={val.color} method={()=>this.decrementer(key1)} method2={()=>this.strike(key1)}/>\n)):\"\"}\n      </div>\n    );  }}\n//------------------------------------------------\nclass Task extends React.Component{\n  constructor(props){\n    super(props)\n    this.state={\n      input:'',\n    } }\n  render(){\n    let className1=\"\"\nif(this.props.prop2){\n  className1 ='menu-active';\n}\n   return <div>\n    <p className={className1} style={{display:'inline-flex'}} >{this.props.prop1}    </p> <button onClick={this.props.method}>X</button> <button onClick={this.props.method2}>Done</button>\n    \n    </div>\n  }}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}